name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: develop
          token: ${{ secrets.GH_PAT }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Update Version and Merge to Main
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          
          # Update version in develop
          sed -i "s/^__version__ = .*/__version__ = '${{ github.event.inputs.version }}'/" gitfleet.py
          git add gitfleet.py
          # Check for changes
          git diff --staged --quiet || echo "Changes detected"
          
      - name: Check for Changes
        id: check_changes
        run: |
          git diff --staged --quiet
          echo "::set-output name=changes_detected::false"
        continue-on-error: true
      - id: check_changes
        name: Check for Changes
        run: |
          if git diff --staged --quiet; then
            echo "changes_detected=false" >> $GITHUB_ENV
          else
            echo "changes_detected=true" >> $GITHUB_ENV
        env:
          changes_detected: ${{ env.changes_detected }}
          
      - name: Commit Changes
        if: ${{ steps.check_changes.outputs.changes_detected == 'true' }}
        run: |
          git commit -m "Update version to ${{ github.event.inputs.version }}"
          git push origin develop
          
          # Merge to main with proper history
          git checkout main
          git pull origin main          # Ensure main is up to date
          git merge --no-ff develop -m "Merge develop: Release ${{ github.event.inputs.version }} - Add release asset support and fix exit codes"
          git push origin main

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}